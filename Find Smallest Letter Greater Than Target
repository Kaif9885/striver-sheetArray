You are given an array of characters letters that is sorted in non-decreasing order, and a character target. There are at least two different characters in letters.

Return the smallest character in letters that is lexicographically greater than target. If such a character does not exist, return the first character in letters.

 

Example 1:

Input: letters = ["c","f","j"], target = "a"
Output: "c"
Explanation: The smallest character that is lexicographically greater than 'a' in letters is 'c'.
Example 2:

Input: letters = ["c","f","j"], target = "c"
Output: "f"
Explanation: The smallest character that is lexicographically greater than 'c

//-----------solution--------------//
char nextGreatestLetter(vector<char>& letters, char target) {
        int low=0;
        int n = letters.size();
        int high =n-1;
       int ans =-1;
        while(low <= high){
           int mid = (low+high)/2;
           
           if(letters[mid] <= target){
            	ans = mid;
				low = mid +1;
           }else{
            high = mid-1;
           }
        }
       return letters[low % letters.size()];
               // low is now the index of the smallest element greater than target
        // If low is out of bounds, return the first element (wrap-around)
    }
